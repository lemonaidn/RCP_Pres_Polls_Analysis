x = x %>%
mutate(Bar_Color = ifelse(Net_Monthly_Change >= 0, 'black', 'green'))
}
df_2016_statewide_totals = full2016_CDReg %>%
filter(Congressional_District == 'Statewide_Total')
df_2016_statewide_totals
df_2016_statewide_totals$Total = c(5437837, 5452229, 5478813, 5508008, 5552475, 5570008, 5603357, 5643537, 5691466)
df_2016_statewide_totals
df_2016_statewide_totals = calculate_monthly_change(df_2016_statewide_totals)
g_2016_statewide_totals = ggplot(data = df_2016_statewide_totals,
aes(x = Reporting_Date,
y = Net_Monthly_Change,
fill = Net_Monthly_Change > 0)) +
geom_col() +
ggtitle('2016 Month-to-Month Net Changes in Registered Voters: NJ Statewide Total') +
theme_economist_white() + scale_fill_tableau() + guides(fill = "none")
g_2016_statewide_totals
library(readr)
library(tidyverse)
library(lubridate)
full2020_CDReg <- read_csv("full2020_CDReg.csv")
calculate_monthly_change = function(x){
vec_Total = c(x$Total)
monthly_change = c()
n = length(vec_Total)
for (i in 1:n) {
if (i == 1){
monthly_change[i] = 0
} else{
monthly_change[i] = vec_Total[i] - vec_Total[i-1]
}
}
x = x %>%
mutate(Net_Monthly_Change = monthly_change)
}
df_2016_statewide_totals = full2016_CDReg %>%
filter(Congressional_District == 'Statewide_Total')
df_2016_statewide_totals
df_2016_statewide_totals$Total = c(5437837, 5452229, 5478813, 5508008, 5552475, 5570008, 5603357, 5643537, 5691466)
df_2016_statewide_totals
df_2016_statewide_totals = calculate_monthly_change(df_2016_statewide_totals)
g_2020_statewide_totals = ggplot(data = df_2020_statewide_totals,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line() +
ggtitle('Total Registered Voters: NJ Statewide Total')
g_2020_statewide_totals
df_2020_CD1 = full2020_CDReg %>%
filter(Congressional_District == '1')
df_2020_CD1 = calculate_monthly_change(df_2020_CD1)
g_2020_CD1 = ggplot(data = df_2020_CD1,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-1')
g_2020_CD1
df_2020_CD2 = full2020_CDReg %>%
filter(Congressional_District == '2')
df_2020_CD2 = calculate_monthly_change(df_2020_CD2)
g_2020_CD2 = ggplot(data = df_2020_CD2,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-2')
g_2020_CD2
df_2020_CD3 = full2020_CDReg %>%
filter(Congressional_District == '3')
df_2020_CD3 = calculate_monthly_change(df_2020_CD3)
g_2020_CD3 = ggplot(data = df_2020_CD3,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-3')
g_2020_CD3
df_2020_CD4 = full2020_CDReg %>%
filter(Congressional_District == '4')
df_2020_CD4 = calculate_monthly_change(df_2020_CD4)
g_2020_CD4 = ggplot(data = df_2020_CD4,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-4')
g_2020_CD4
df_2020_CD5 = full2020_CDReg %>%
filter(Congressional_District == '5')
df_2020_CD5 = calculate_monthly_change(df_2020_CD5)
g_2020_CD5 = ggplot(data = df_2020_CD5,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-5')
g_2020_CD5
df_2020_CD6 = full2020_CDReg %>%
filter(Congressional_District == '6')
df_2020_CD6 = calculate_monthly_change(df_2020_CD6)
g_2020_CD6 = ggplot(data = df_2020_CD6,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-6')
g_2020_CD6
df_2020_CD7 = full2020_CDReg %>%
filter(Congressional_District == '7')
df_2020_CD7 = calculate_monthly_change(df_2020_CD7)
g_2020_CD7 = ggplot(data = df_2020_CD7,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-7')
g_2020_CD7
df_2020_CD8 = full2020_CDReg %>%
filter(Congressional_District == '8')
df_2020_CD8 = calculate_monthly_change(df_2020_CD8)
g_2020_CD8 = ggplot(data = df_2020_CD8,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line() +
ggtitle('Total Registered Voters: NJ CD-8')
g_2020_CD8
df_2020_CD9 = full2020_CDReg %>%
filter(Congressional_District == '9')
df_2020_CD9 = calculate_monthly_change(df_2020_CD9)
g_2020_CD9 = ggplot(data = df_2020_CD9,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()   +
ggtitle('Total Registered Voters: NJ CD-9')
g_2020_CD9
df_2020_CD10 = full2020_CDReg %>%
filter(Congressional_District == '10')
df_2020_CD10 = calculate_monthly_change(df_2020_CD10)
g_2020_CD10 = ggplot(data = df_2020_CD10,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()   +
ggtitle('Total Registered Voters: NJ CD-10')
g_2020_CD10
df_2020_CD11 = full2020_CDReg %>%
filter(Congressional_District == '11')
df_2020_CD11 = calculate_monthly_change(df_2020_CD11)
g_2020_CD11 = ggplot(data = df_2020_CD11,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line()  +
ggtitle('Total Registered Voters: NJ CD-11')
g_2020_CD11
df_2020_CD12 = full2020_CDReg %>%
filter(Congressional_District == '12')
df_2020_CD12 = calculate_monthly_change(df_2020_CD12)
g_2020_CD12 = ggplot(data = df_2020_CD12,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line() +
ggtitle('Total Registered Voters: NJ CD-12')
g_2020_CD12
install.packages("shiny")
shiny::runApp('C:/NJ_Voter_Reg')
runApp('C:/NJ_Voter_Reg')
g_2016_total_statewide_totals
library(readr)
library(tidyverse)
library(lubridate)
full2016_CDReg <- read_csv("full2016_CDReg.csv")
calculate_monthly_change = function(x){
vec_Total = c(x$Total)
monthly_change = c()
n = length(vec_Total)
for (i in 1:n) {
if (i == 1){
monthly_change[i] = 0
} else{
monthly_change[i] = vec_Total[i] - vec_Total[i-1]
}
}
x = x %>%
mutate(Net_Monthly_Change = monthly_change)
}
df_2016_statewide_totals = full2016_CDReg %>%
filter(Congressional_District == 'Statewide_Total')
df_2016_statewide_totals
df_2016_statewide_totals$Total = c(5437837, 5452229, 5478813, 5508008, 5552475, 5570008, 5603357, 5643537, 5691466)
df_2016_statewide_totals
df_2016_statewide_totals = calculate_monthly_change(df_2016_statewide_totals)
g_2016_total_statewide_totals = ggplot(data = df_2016_statewide_totals,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line() +
ggtitle('Total Registered Voters: NJ Statewide Total')
g_2016_total_statewide_totals
g_2016_total_statewide_totals = ggplot(data = df_2016_statewide_totals,
aes(x = Reporting_Date,
y = Total)) +
geom_point() +
geom_line() +
ggtitle('Total Registered Voters: NJ Statewide Total 2016')
g_2016_total_statewide_totals
library(readr)
polls <- read_csv("polls/polls.csv")
View(polls)
library(tidyerse)
library(tidyverse)
library(readr)
polls <- read_csv("polls/polls.csv")
polls
polls_2020 = polls[1:220]
polls_2020 = polls[1:220,]
library(googleVis)
setwd("~/polls")
polls_2020 <- read_csv("polls_2020.csv")
View(polls_2020)
View(polls_2020)
unclean_dates = polls_2020$date
unclean_dates
test = strsplit(unclean_dates[1])
test = strsplit(unclean_dates[1], ' ')
test
test = strsplit(unclean_dates, ' ')
test
test = sapply(test[[1]])
test = test[[1]]
test
for(i in test) {
i = i[1][1]
}
print(i)
i = i[1]
for(i in test) {
i = i[1]
print(i)
}
for(i in test) {
i = i[1][1]
print(i)
}
test = strsplit(unclean_dates, ' ')
test
for(i in test) {
i = i[1][1]
print(i)
}
test
test = strsplit(unclean_dates, ' ')
test
test = for(i in test) {
i = i[1][1]
print(i)
}
test
for (i in 1:length(test)) {
cleaned_dates[i] = test[i][1]
}
cleaned_dates = c()
for (i in 1:length(test)) {
cleaned_dates[i] = test[i][1]
}
cleaned_dates
for (i in 1:length(test)) {
cleaned_dates[i] = test[[i]][1]
}
cleaned_dates
for (i in 1:length(test)) {
print(test[[i]][1])
}
for (i in 1:length(test)) {
print(test[i])
}
split_dates = strsplit(unclean_dates, ' ')
cleaned_dates = c()
for (i in 1:length(split_dates)) {
print(split_dates[[i]])
}
for (i in 1:length(split_dates)) {
print(split_dates[[i]][1])
}
for (i in 1:length(split_dates)) {
cleaned_dates[i] split_dates[[i]][1])
}
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
full_dates = sapply(cleaned_dates, paste0('/20'))
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
library(lubridate)
for (i in 1:length(cleaned_dates)){
dates_as_datetime[i] = parse_date(cleaned_dates[i], '%m/%d/%y')
}
dates_as_datetime = c()
for (i in 1:length(cleaned_dates)){
dates_as_datetime[i] = parse_date(cleaned_dates[i], '%m/%d/%y')
}
dates_as_datetime
library(tidyverse)
library(readr)
library(lubridate)
polls <- read_csv("polls/polls.csv")
polls
polls <- read_csv("polls.csv")
polls
polls_2020 = polls[2:220,] %>%
select(date,
poll,
biden,
trump,
spread,
sample,
moe)
polls_2020
unclean_dates = polls_2020$date
unclean_dates
split_dates = strsplit(unclean_dates, ' ')
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_datetime = c()
for (i in cleaned_dates){
i = parse_date(i, '%m/%d/%y')
}
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_datetime = c()
for (i in cleaned_dates){
i = parse_date(i, '%m/%d/%y')
print(i)
}
library(tidyverse)
library(readr)
library(lubridate)
polls <- read_csv("polls.csv")
polls
polls_2020 = polls[2:220,] %>%
select(date,
poll,
biden,
trump,
spread,
sample,
moe)
polls_2020
unclean_dates = polls_2020$date
unclean_dates
split_dates = strsplit(unclean_dates, ' ')
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_datetime = c()
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = parse_date(cleaned_dates[i], '%m/%d/%y')
}
cleaned_dates
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
class(cleaned_dates)
type(cleaned_dates)
cleaned_dates
dates_as_datetime = c()
dates_as_datetime = as.Date(cleaned_dates, format = '%m/d%/y%')
dates_as_datetime
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_datetime = c()
for (i in cleaned_dates){
i = parse_date(i, '%m/%d/%y')
print(i)
}
cleaned_dates
parse_date(cleaned_dates, '%m/%d/%y')
cleaned_dates
cleaned_dates = parse_date(cleaned_dates, '%m/%d/%y')
cleaned_dates
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_dates = parse_date(cleaned_dates, '%m/%d/%y')
dates_as_dates
polls_2020$date = dates_as_dates
polls_2020
write.csv(polls_2020, 'C:/Users/Aidan/Documents/polls/polls_2020.csv', row.names = F)
polls_2020$poll = gsub("[[:punct:]]", "", polls_2020$poll)
polls_2020
library(tidyverse)
library(readr)
library(lubridate)
polls <- read_csv("polls.csv")
polls
polls_2020 = polls[2:220,] %>%
select(date,
poll,
biden,
trump,
spread,
sample,
moe)
polls_2020
unclean_dates = polls_2020$date
unclean_dates
split_dates = strsplit(unclean_dates, ' ')
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_dates = parse_date(cleaned_dates, '%m/%d/%y')
dates_as_dates
polls_2020$date = dates_as_dates
polls_2020$poll = gsub("*", "", polls_2020$poll)
polls_2020
polls_2020$poll = gsub("\\*", "", polls_2020$poll)
polls_2020
write.csv(polls_2020, 'C:/Users/Aidan/Documents/polls/polls_2020.csv', row.names = F)
dates_as_dates = as_datetime(dates_as_dates)
polls_2020$date = dates_as_dates
polls_2020$poll = gsub("\\*", "", polls_2020$poll)
polls_2020
write.csv(polls_2020, 'C:/Users/Aidan/Documents/polls/polls_2020.csv', row.names = F)
library(tidyverse)
library(readr)
library(lubridate)
polls <- read_csv("polls.csv")
polls
polls_2020 = polls[2:220,] %>%
select(date,
poll,
biden,
trump,
spread,
sample,
moe)
polls_2020
unclean_dates = polls_2020$date
unclean_dates
split_dates = strsplit(unclean_dates, ' ')
cleaned_dates = c()
for (i in 1:length(split_dates)) {
cleaned_dates[i] = split_dates[[i]][1]
}
cleaned_dates
for (i in 1:length(cleaned_dates)) {
cleaned_dates[i] = paste0(cleaned_dates[i], '/20')
}
cleaned_dates
dates_as_dates = parse_date(cleaned_dates, '%m/%d/%y')
dates_as_dates = as_datetime(dates_as_dates)
polls_2020$date = dates_as_dates
polls_2020$poll = gsub("\\*", "", polls_2020$poll)
polls_2020
write.csv(polls_2020, 'C:/Users/Aidan/Documents/polls/polls_2020.csv', row.names = F)
